{"version":3,"sources":["Components/Pomodoro.js","App.js","reportWebVitals.js","index.js"],"names":["STOP_STATE","RUNNING_STATE","SESSION_LABEL","INITIAL_STATE","breakLabel","sessionLabel","timerLabel","breakLength","sessionLength","timerState","intervalID","timerCount","Pomodoro","props","state","resetTimer","bind","incrementSession","decrementSession","controllTimer","decrementBreak","incrementBreak","startCountDown","countUp","calculateRest","stopCountDown","zeroPadding","currentVal","this","setState","console","log","audioItem","document","getElementById","pause","currentTime","intervalId","clearInterval","timerId","setInterval","rest","min","Math","floor","sec","len","val","Array","join","slice","timerRest","currentLabel","beepSound","play","then","catch","error","startStyle","stopStyle","restTimer","id","className","onClick","preload","src","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a9f02b81.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst STOP_STATE = 'stop'\nconst RUNNING_STATE = 'running'\nconst SESSION_LABEL = 'Session'\nconst BREAK_LABEL = 'Break'\n\nconst INITIAL_STATE = {\n      breakLabel: 'Break Length',\n      sessionLabel: 'Session Length',\n      timerLabel: SESSION_LABEL,\n      breakLength: 5,\n      sessionLength: 25,\n      timerState: STOP_STATE,\n      intervalID: '',\n      timerCount: 0\n    }\n\nclass Pomodoro extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = INITIAL_STATE\n    this.resetTimer = this.resetTimer.bind(this)\n    this.incrementSession = this.incrementSession.bind(this)\n    this.decrementSession = this.decrementSession.bind(this)\n    this.controllTimer = this.controllTimer.bind(this)\n    this.decrementBreak = this.decrementBreak.bind(this)\n    this.incrementBreak = this.incrementBreak.bind(this)\n    \n    this.startCountDown = this.startCountDown.bind(this)\n    this.countUp = this.countUp.bind(this)\n    this.calculateRest = this.calculateRest.bind(this)\n    this.stopCountDown = this.stopCountDown.bind(this)\n    this.zeroPadding = this.zeroPadding.bind(this)\n  }\n  \n  decrementBreak() {\n    let currentVal = this.state.breakLength\n    if (currentVal > 1) { currentVal-- }\n    this.setState({ breakLength: currentVal })\n  }\n  \n  incrementBreak() {\n    let currentVal = this.state.breakLength\n    if (currentVal < 60) { currentVal++ }\n    this.setState({ breakLength: currentVal })    \n  }\n  \n  resetTimer() {\n    console.log('resetTimer!')\n    const audioItem = document.getElementById('beep')\n    audioItem.pause()\n    audioItem.currentTime = 0\n    this.stopCountDown()\n    this.setState(INITIAL_STATE)\n  }\n  \n  incrementSession() {\n    let currentVal = this.state.sessionLength\n    if (currentVal < 60) { currentVal++ }\n    this.setState({ sessionLength: currentVal })\n  }\n  \n  decrementSession() {\n    let currentVal = this.state.sessionLength\n    if (currentVal > 1) { currentVal-- }\n    this.setState({ sessionLength: currentVal })\n  }\n  \n  stopCountDown() {\n     this.setState({ timerState: STOP_STATE })\n     console.log(this.state.intervalId)\n     clearInterval(this.state.intervalId)\n  }\n  \n  startCountDown() {\n    this.timerId = setInterval(this.countUp, 1000)\n    this.setState({intervalId: this.timerId})\n  }\n  \n  calculateRest() {\n    return (this.state.sessionLength * 60) - this.state.timerCount\n  }\n  \n  // return array\n  restTimer() {\n    const rest = this.calculateRest()\n    let min = Math.floor(rest / 60)\n    let sec = rest % 60\n    return [this.zeroPadding(2, min), this.zeroPadding(2, sec)] \n  }\n  \n  zeroPadding(len, val) {\n    return (Array(len).join('0') + val ).slice(-len)\n  }\n  \n  countUp() {\n    const timerCount = this.state.timerCount + 1\n    const rest = this.calculateRest()\n    this.setState({ timerCount: timerCount})\n    this.setState({ timerRest: rest })\n    if (rest === 0) {\n      const currentLabel = this.state.timerLabel\n      this.resetTimer()\n      if (currentLabel === SESSION_LABEL) {\n        this.setState({sessionLength: this.state.breakLength})\n        this.setState({ timerLabel: BREAK_LABEL })\n      } else {\n        this.setState({sessionLength: this.state.sessionLength})\n        this.setState({ timerLabel: SESSION_LABEL })        \n      }\n      this.beepSound()\n      this.controllTimer()\n    }\n  }\n  \n  \n  controllTimer() {\n    if (this.state.timerState === STOP_STATE) {\n      this.setState({ timerState: RUNNING_STATE })\n      this.startCountDown()\n    } else {\n      this.stopCountDown()\n    }\n  }\n  \n  beepSound() {\n   const audioItem = document.getElementById('beep')\n   audioItem.play().then(() => {\n      // Automatic playback started!\n   }).catch((error) => {\n     // Automatic playback failed.\n     // Show a UI element to let the user manually start playback.\n   })\n }\n  \n  render () {\n    const timerState = this.state.timerState\n    let startStyle = (timerState === RUNNING_STATE ? 'hide' : 'show')\n    let stopStyle = (timerState === STOP_STATE ? 'hide' : 'show')\n    let restTimer = this.restTimer()\n    let sessionLabel = SESSION_LABEL\n    return (\n      <div id='wrapper'>\n      <h2>Pomodoro Clock</h2>\n      <div id=\"container\">\n        <div id=\"timer-container\">\n          <div id=\"timer-label\" className='label'>{this.state.timerLabel}</div>\n          <div id=\"time-left\">{restTimer[0]}:{restTimer[1]}</div>\n          <div className=\"innerContainer\">\n            <button id=\"start_stop\" onClick={this.controllTimer} className={this.state.timerState}>\n            <audio id=\"beep\" preload=\"auto\" \n          src=\"https://bobmatyas.github.io/fcc-pomodoro-clock/sounds/beep.mp3\" />\n              <span id='startButton' className={startStyle}>Start</span>\n              <span id='stopButton' className={stopStyle}>Stop</span>\n            </button>\n            <button id='reset' onClick={this.resetTimer}>Reset</button>  \n          </div>\n        </div>\n         <div id=\"break-container\">\n          <div id='break-label' className='label'>{this.state.breakLabel}</div>\n           <div className=\"lengthContainer\">\n            <button id='break-decrement' onClick={this.decrementBreak}></button>\n            <div id=\"break-length\">{this.state.breakLength}</div>\n             <button id='break-increment' onClick={this.incrementBreak}></button>\n           </div>\n        </div>\n        <div id=\"session-container\">\n          <div id='session-label' className='label'>{this.state.sessionLabel}</div>\n          <div className=\"lengthContainer\">\n            <button id='session-decrement' onClick={this.decrementSession}></button>\n            <div id=\"session-length\">{this.state.sessionLength}</div>\n            <button id='session-increment' onClick={this.incrementSession}></button>\n          </div>\n        </div>\n      </div>\n     </div>\n    )\n  }\n}\n\n\nexport default Pomodoro;\n","import React from 'react';\nimport Pomodoro from './Components/Pomodoro';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Pomodoro />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}